apply plugin: 'jacoco'

project.afterEvaluate {

    jacoco {
        toolVersion = "0.7.9"
        reportsDir = file("$buildDir/build/reports")
    }

    def coverageSourceDirs = [
            "${rootDir}/app/src/main/kotlin"
    ]

    def buildTypes = android.buildTypes.collect { it }

    def excluded = [
            '**/*Test*.*',
            '**/AutoValue_*.*',
            '**/*JavascriptBridge.class',
            '**/R.class',
            '**/R$*.class',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/*ViewHolder.*',
            '**/*View.*',
            '**/*Adapter.*',
            '**/*Model.*',
            '**/BuildConfig.*',
            '**/*$ViewBinder*.*',
            '**/*$ViewInjector*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*$InjectAdapter.class',
            '**/*$ModuleAdapter.class',
            '**/*$ViewInjector*.class',
            '**/*_MembersInjector.class', //Dagger2 generated code
            '*/*_MembersInjector*.*', //Dagger2 generated code
            '**/*_*Factory*.*', //Dagger2 generated code
            '*/*Component*.*', //Dagger2 generated code
            '**/*Module*.*', //Dagger2 generated code
            '**/*Binding*.*',//Android Data Binding Generated Code
            '**/BR.*' //Android Data Binding Generated Code
    ]

    buildTypes.each { buildType ->
        if (!buildType.testCoverageEnabled) {
            return
        }

        def buildTypeName = buildType.name.capitalize()
        def unitTest = "test${buildTypeName}UnitTest"

        task "jacoco${buildTypeName}TestReport"(type: JacocoReport, dependsOn: unitTest) {
            reports {
                html.enabled true
                xml.enabled false
            }

            group = "Reporting"
            description = "Generate Jacoco coverage report for ${buildTypeName} build."

            classDirectories = fileTree(
                    dir: "${rootDir}/app/build/tmp/kotlin-classes/${buildType.name}",
                    excludes: excluded
            )

            sourceDirectories = files(coverageSourceDirs)

            executionData = files("${buildDir}/jacoco/${unitTest}.exec")
        }
    }
}
